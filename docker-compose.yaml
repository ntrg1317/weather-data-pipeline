---
version: '3.8'

x-common:
  &common
  build: .
  user: "${AIRFLOW_UID}:0"
  env_file:
    - .env
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/data:/opt/airflow/data
    - /var/run/docker.sock:/var/run/docker.sock
    - ./spark/app:/opt/airflow/app
    - ./spark/data:/opt/airflow/spark/data

x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

x-spark-common:
  &spark-common
  image: bitnami/spark:latest
  environment:
    - PYSPARK_PYTHON=/usr/bin/python3.10
    - PYSPARK_DRIVER_PYTHON=/usr/bin/python3.10
  volumes:
    - ./spark/app:/opt/spark/app
    - ./spark/data:/opt/spark/data

services:
  postgres:
    image: postgis/postgis:13-3.1
    container_name: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    env_file:
      - .env
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d
    restart: always

  scheduler:
    <<:
      - *common
      - *depends-on
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<:
      - *common
      - *depends-on
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: trangnt1317
    volumes:
      - ~/airflow/data:/data
    command: server /data --console-address ":9001"

#  spark-master:
#    image: bitnami/spark:3.4.1
#    env_file:
#      - .env
#    environment:
#      - SPARK_MODE=master
#      - SPARK_RPC_AUTHENTICATION_ENABLED=no
#      - SPARK_RPC_ENCRYPTION_ENABLED=no
#      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
#      - SPARK_SSL_ENABLED=no
#    ports:
#      - "9090:8080"
#      - "7077:7077"
#    volumes:
#      - ./spark/app:/opt/spark/app
#      - ./spark/data:/opt/spark/data
#      - ./config:/opt/spark/config
#
#  spark-worker:
#    image: bitnami/spark:3.4.1
#    environment:
#      - SPARK_MODE=worker
#      - SPARK_MASTER_URL=spark://spark-master:7077
#      - SPARK_WORKER_MEMORY=4g
#      - SPARK_WORKER_CORES=4
#      - SPARK_RPC_AUTHENTICATION_ENABLED=no
#      - SPARK_RPC_ENCRYPTION_ENABLED=no
#      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
#      - SPARK_SSL_ENABLED=no
#    volumes:
#      - ./spark/app:/opt/spark/app
#      - ./spark/data:/opt/spark/data
#      - ./config:/opt/spark/config
#    depends_on:
#      - spark-master

  spark-master:
    <<: *spark-common
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "9090:8080"
      - "7077:7077"

  spark-worker-1:
    <<: *spark-common
    ports:
      - "9091:8080"
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 4
      SPARK_WORKER_MEMORY: 4g
      SPARK_MASTER_URL: spark://spark-master:7077

  spark-worker-2:
    ports:
      - "9092:8080"
    <<: *spark-common
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 4
      SPARK_WORKER_MEMORY: 4g
      SPARK_MASTER_URL: spark://spark-master:7077